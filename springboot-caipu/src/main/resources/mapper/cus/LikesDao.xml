<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ye.modules.cus.dao.LikesDao">

	<!-- 可根据自己的需求，是否要使用 -->
	<resultMap type="com.ye.modules.cus.entity.LikesEntity" id="likesMap">
		<result property="id" column="id" />
		<result property="menuId" column="menu_id" />
		<result property="userId" column="user_id" />
		<result property="createTime" column="create_time" />
	</resultMap>

	<select id="queryObject" resultType="com.ye.modules.cus.entity.LikesEntity">
		select * from t_likes where
		id = #{value}
	</select>

	<select id="queryList" resultType="com.ye.modules.cus.entity.MenuEntity">
		select m.* from t_likes a inner join t_menu m on a.menu_id = m.id

		<where>
			<if test="name != null and name.trim() != ''">
				and `name` like concat('%',#{name},'%')
			</if>
			<if test="userId != null  ">
				and a.`user_id`=#{userId}
			</if>
		</where>

		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id asc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from t_likes
		<where>
			<if test="name != null and name.trim() != ''">
				and `name` like concat('%',#{name},'%')
			</if>
<if test="userId != null  ">
				and   `user_id`=#{userId} 
			</if>
		</where>
	</select>

	<insert id="save" parameterType="com.ye.modules.cus.entity.LikesEntity"
		useGeneratedKeys="true" keyProperty="id">
		insert into t_likes
		(
		`menu_id`,
		`user_id`,
		`create_time`
		)
		values
		(
		#{menuId},
		#{userId},
		#{createTime}
		)
	</insert>

	<update id="update" parameterType="com.ye.modules.cus.entity.LikesEntity">
		update t_likes
		<set>
			<if test="menuId != null">`menu_id` = #{menuId}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete">
		delete from t_likes where id = #{value}
	</delete>

	<delete id="deleteBatch">
		delete from t_likes where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

</mapper>